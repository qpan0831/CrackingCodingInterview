//first reverse list O(n)
//compare rverse list with inital list O(n)
    public Node reverseList(Node n)
    {
        Node head= null;
        while(n!=null) {
            Node temp = new Node(n.data);
            temp.next = head;
            head = temp;
            n= n.next;
        }
        return head;
    }

    public boolean isPalindrome(MyLinkedList list)
    {
        Node a1=list.head;
        Node a2=reverseList(list.head);
        while(a1!=null&&a2!=null)
        {
            if(a1.data!=a2.data)
                return false;
            else
            {
                a1=a1.next;
                a2=a2.next;
            }
        }
        return a1==null&&a2==null;
    }
